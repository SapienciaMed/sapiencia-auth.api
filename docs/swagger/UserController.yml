/api/v1/user/get-user-by-id/{id}:
  get:
    parameters:
      - in: path
        name: id
        schema:
          type: number
        required: true
        description: Id del usuario
    tags:
      - Usuarios
    summary: Permite la consulta de un usuario por su ID
    produces:
      - application/json
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user"
            examples:
              Action:
                value:
                  {
                    "data":
                      [
                        {
                          "id": 1,
                          "documentType": "Cédula de ciudadanía",
                          "documentNumber": "797940",
                          "names": "Usuario",
                          "lastNames": "Test",
                          "email": "pro39df@gmail.com",
                          "gender": "m",
                          "phoneNumber": null,
                          "cellPhoneNumber": null,
                          "deparment": "Antioquia",
                          "town": "Medellin",
                          "neighborhood": "Altavista",
                          "address": null,
                          "createdDate": "26/06/2023",
                          "userCreated": "jhon",
                          "modifiedDate": "26/06/2023",
                          "modifiedUser": "doe",
                        },
                      ],
                    "operation": { "code": "OK", "message": "" },
                  }

    security:
      - apiAuth: []

/api/v1/user/create:
  post:
    tags:
      - Usuarios
    summary: Crea un usuario
    description: Crea un usuario a partir de los campos requeridos.
    operationId: createUser
    requestBody:
      description: Crea un usuario a partir de los campos en un json.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
    responses:
      200:
        description: OK
        content:
          application/json:
            examples:
              Usuario Creado:
                value:
                  {
                    "data":
                      {
                        "names": "Juan",
                        "lastNames": "Pruebas",
                        "typeDocument": "CC",
                        "numberDocument": "123456789012",
                        "userModify": "Jhon",
                        "userCreate": "Doe",
                        "email": "jearistizabal@i4digital.com",
                        "dateModify": "2023-06-26T23:41:39.097-05:00",
                        "dateCreate": "2023-06-26T23:41:39.098-05:00",
                        "id": "9",
                      },
                    "operation": { "code": "OK" },
                  }
      400:
        description: Bad request
        content:
          application/json:
            examples:
              Información invalida:
                value:
                  {
                    "data": null,
                    "operation":
                      {
                        "code": "FAIL",
                        "message": "ValidationException: E_VALIDATION_FAILURE: Validation Exception",
                      },
                  }
components:
  schemas:
    User:
      type: object
      properties:
        documentType:
          type: string
          example: "CC"
        documentNumber:
          type: string
          example: "234556677"
        names:
          type: string
          example: "Diana"
        lastNames:
          type: string
          example: Perez
        email:
          type: string
          example: "diana@buencom.com"
        gender:
          type: string
          example: "Femenino"
        phoneNumber:
          type: string
          example: ""
        cellPhoneNumber:
          type: string
          example: ""
        deparment:
          type: string
          example: "1"
        town:
          type: string
          example: "1"
        neighborhood:
          type: string
          example: "1"
        address:
          type: string
          example: "Cra 38"
        userCreated:
          type: string
          example: "jhon"
        createdDate:
          type: string
          example: "26/06/2023"
        modifiedUser:
          type: string
          example: "doe"
        modifiedDate:
          type: string
          example: "26/06/2023"
